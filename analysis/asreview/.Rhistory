#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals))
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),vjust=1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
library(ggplot2)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.10)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names.data.frame(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
row.names(df_dtm)
row.names.data.frame(df_dtm)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Words in title",x = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Words in title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Words in the abstract title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.10)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.20)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.20)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the abstract text",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
# get rmarkdown directory
caminho<-getwd()
# set working directory
setwd(caminho)
# Setup library
library('quanteda')
library('readtext')
library('revtools')
data_revtools<-read_bibliography("asreview/asreview_result_dropout-prediction-a-systematic-literature-review-v3_FINAL.csv")
data_revtools<- data_revtools[data_revtools$final_included==1,]
analysis_revtools<-screen_topics(data_revtools)
# get rmarkdown directory
caminho<-getwd()
# set working directory
setwd(caminho)
# Setup library
library('quanteda')
library('readtext')
library('revtools')
data_revtools<-read_bibliography("asreview/asreview_result_dropout-prediction-a-systematic-literature-review-v3_FINAL.csv")
data_revtools<- data_revtools[data_revtools$final_included==1,]
#analysis_revtools<-screen_topics(data_revtools)
analysis_revtools
# get rmarkdown directory
caminho<-getwd()
# set working directory
setwd(caminho)
# Setup library
library('quanteda')
library('readtext')
library('revtools')
data_revtools<-read_bibliography("asreview/asreview_result_dropout-prediction-a-systematic-literature-review-v3_FINAL.csv")
data_revtools<- data_revtools[data_revtools$final_included==1,]
#analysis_revtools<-screen_topics(data_revtools)
#analysis_revtools
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.20)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the abstract text",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
pdf.files  <- list.files(path=caminho,recursive=T,pattern="pdf$",full.names=TRUE)
pdfs<-readtext(pdf.files[1],docvarsfrom = "filenames", sep = "_", docvarnames = c("author", "year","title"))
for (file in pdf.files[2:length(pdf.files)]) {
pdf<-readtext(file,docvarsfrom = "filenames", sep = "_", docvarnames = c("author", "year","title"))
pdfs <- rbind(pdfs,pdf)
}
pdfs
# Transform the journal articles into a corpus object
pdfs_corpus  <- corpus(pdfs)
summary(pdfs_corpus, 5)
pdfs_corpus  <- corpus(pdfs[1:10,])
corpus_DFM <- dfm(pdfs_corpus, tolower = TRUE, stem = FALSE, remove = c('@',"et", "al", "fig", "table", "ml", "http", stopwords(language = 'en',source = "smart")),
remove_punct = TRUE, remove_numbers = TRUE)
dfm_sort(corpus_DFM)
stopwords("english")
textplot_wordcloud(corpus_DFM, min.freq = 30, random.order=F, rot.per = .10,colors = RColorBrewer::brewer.pal(8,'Dark2'))
#summary(corpus_DFM)
topfeatures(corpus_DFM, 100)
library(quanteda.textmodels)
tmod_wf <- textmodel_wordfish(corpus_DFM,c(6,5))
summary(tmod_wf)
pdf.files
for(image in pdf.files) {
}
imageFiles <-PDF_extractImages(pdf.files[2])
library("tabulizer")
library(utils)
pb = txtProgressBar(min = 0, max = length(pdf.files), initial = 0,)
tab = list()
for (i in 1:length(pdf.files)){
setTxtProgressBar(pb,i)
try(
tab[[i]]<-extract_tables(pdf.files[i])
)
}
# get rmarkdown directory
caminho<-getwd()
# set working directory
setwd(caminho)
# Setup library
library('quanteda')
library('readtext')
library('revtools')
data_revtools<-read_bibliography("asreview/asreview_result_dropout-prediction-a-systematic-literature-review-v3_FINAL.csv")
data_revtools<- data_revtools[data_revtools$final_included==1,]
#analysis_revtools<-screen_topics(data_revtools)
#analysis_revtools
library(lattice)
library(ggplot2)
x_dtm<-make_dtm(data_revtools$title,min_freq = 0.05)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
par(las=2)
barplot(totals,ylim = c(0,max(totals)+5),main = "Title words frequency",ylab = "number occurrences")
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the paper title",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
x_dtm<-make_dtm(data_revtools$abstract,min_freq = 0.20)
#create a matrix of the document term-matrix
x_dtm_matrix <- as.matrix(x_dtm)
#apply function to calculate columns totals
totals<-apply(x_dtm_matrix,MARGIN = 2,sum)
#create dataframe
df_dtm<-data.frame(totals)
df_dtm$words<-row.names(df_dtm)
ggplot(data = df_dtm,aes(x=words,y=totals)) +
labs(title = "Common words in the abstract text",y = "freq")+ #modify legend and plot labels
geom_bar(stat = "identity") + coord_flip()+
geom_text(aes(label=totals),hjust=-1.6)
pdf.files  <- list.files(path=caminho,recursive=T,pattern="pdf$",full.names=TRUE)
pdfs<-readtext(pdf.files[1],docvarsfrom = "filenames", sep = "_", docvarnames = c("author", "year","title"))
for (file in pdf.files[2:length(pdf.files)]) {
pdf<-readtext(file,docvarsfrom = "filenames", sep = "_", docvarnames = c("author", "year","title"))
pdfs <- rbind(pdfs,pdf)
}
pdfs
# Transform the journal articles into a corpus object
pdfs_corpus  <- corpus(pdfs)
summary(pdfs_corpus, 5)
pdfs_corpus  <- corpus(pdfs[1:10,])
corpus_DFM <- dfm(pdfs_corpus, tolower = TRUE, stem = FALSE, remove = c('@',"et", "al", "fig", "table", "ml", "http", stopwords(language = 'en',source = "smart")),
remove_punct = TRUE, remove_numbers = TRUE)
dfm_sort(corpus_DFM)
stopwords("english")
textplot_wordcloud(corpus_DFM, min.freq = 30, random.order=F, rot.per = .10,colors = RColorBrewer::brewer.pal(8,'Dark2'))
#summary(corpus_DFM)
topfeatures(corpus_DFM, 100)
library(quanteda.textmodels)
tmod_wf <- textmodel_wordfish(corpus_DFM,c(6,5))
summary(tmod_wf)
pdf.files
for(image in pdf.files) {
}
#imageFiles <-PDF_extractImages(pdf.files[2])
library("tabulizer")
library(utils)
pb = txtProgressBar(min = 0, max = length(pdf.files), initial = 0,)
tab = list()
for (i in 1:length(pdf.files)){
setTxtProgressBar(pb,i)
try(
tab[[i]]<-extract_tables(pdf.files[i]),
silent = TRUE
)
}
# Where is AUC
grep("AUC",tab)
grep("AUC",tab[[6]][[4]])
tab[[6]][[4]]
View(tab)
tab[[85]]
grep("accuracy",tab)
lgrep("accuracy",tab)
tab[[2]]
tab[[2]][[5]]
write_xlsx(tab,path = 'tables.xlsx')
library(writexl)
?writexl
??writexl
install.packages("writexl")
library(writexl)
write_xlsx(tab,path = 'tables.xlsx')
View(tab)
library(writexl)
write_xlsx(as.data.frame(tab),path = 'tables.xlsx')
as.data.frame(tab)
class(tab)
View(tab)
tab[[2]][[4]]
